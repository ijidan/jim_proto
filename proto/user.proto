syntax = "proto3";
option go_package = "proto_build/;proto_build";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "github.com/mwitkow/go-proto-validators@v0.3.2/validator.proto";
import "common.proto";



//性别
enum Gender{
  Unknown = 0; //未知
  Male = 1; //男
  Female = 2;// 女
}
message User{
  uint64 id = 1;
  string nickname = 2;
  Gender gender = 3;
  string avatar_url = 4;
  string extra = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
  google.protobuf.Timestamp deleted_at = 8;
}

message CreateUserRequest{
  string nickname = 1 [(validator.field) = {regex: "^[a-z]{2,5}$"}];
  Gender gender = 2 [(validator.field) = {msg_exists:true}];
  string avatar_url = 3 [(validator.field) = {regex: "^[a-z]{2,5}$"}];
  string password = 4 [(validator.field) = {regex:"^[a-z][a-z0-9]{1,17}$"}];
  string password_rpt = 5 [(validator.field) = {regex:"^[a-z][a-z0-9]{17}$"}];
}

message CreateUserResponse{
  User user = 1;
}

message GetUserRequest{
  uint64 id = 1 [(validator.field) = {int_gt: 0}];
}
message GetUserResponse{
  User user = 1;
}

message QueryUserRequest{
  string keyword = 1;
  uint64 page = 2 [(validator.field)={int_gt:0}];
  uint64 page_size = 3 [(validator.field)={int_gt:0}];
}

message QueryUserResponse{
  Pager pager = 1;
  repeated User user = 2;
}

service UserService{
  rpc createUser(CreateUserRequest) returns(CreateUserResponse){
    option (google.api.http) = {
      post: "/v1/api/user"
    };
  }
  rpc GetUser(GetUserRequest) returns(GetUserResponse){
    option(google.api.http) = {
      get:"/v1/api/user/{id}"
    };
  }
  rpc QueryUser(QueryUserRequest)returns(QueryUserResponse){
    option(google.api.http) = {
      get:"/v1/api/users"
    };
  }
}

