syntax = "proto3";
package message;
option go_package = "proto_build/;proto_build";

import "google/api/annotations.proto";
//import "github.com/mwitkow/go-proto-validators@v0.3.2/validator.proto";
import "github.com/envoyproxy/protoc-gen-validate@v0.6.3/validate/validate.proto";


message RegisterRequest{
  uint64 gateway_id=1 [(validate.rules).uint64 = {gt:0}];
  string client_id = 2 [(validate.rules).string = {min_len:1}];

}

message RegisterResponse{
}

message UnRegisterRequest{
  uint64 gateway_id=1 [(validate.rules).uint64 = {gt:0}];
  string client_id = 2 [(validate.rules).string = {min_len:1}];
}

message UnRegisterResponse{

}

message SendMessageRequest{
  uint64 gateway_id=1 [(validate.rules).uint64 = {gt:0}];
  bytes data = 2 [(validate.rules).bytes = {min_len:1}];
}

message SendMessageResponse{
  uint64 gateway_id=1 [(validate.rules).uint64 = {gt:0}];
  uint64 message_id = 2[(validate.rules).uint64 = {gt:0}];

}

message PushToAllRequest{
  uint64 gateway_id=1 [(validate.rules).uint64 = {gt:0}];
  bytes data = 2 [(validate.rules).bytes = {min_len:1}];
}

message PushToAllResponse{
  uint64 message_id = 1[(validate.rules).uint64 = {gt:0}];
}


service GatewayService {

  rpc Register(RegisterRequest) returns(RegisterResponse){
    option (google.api.http) = {
      post: "/v1/api/gateway/register",
      body:"*"
    };
  }

  rpc UnRegister(UnRegisterRequest) returns(UnRegisterResponse){
    option (google.api.http) = {
      post: "/v1/api/gateway/unRegister",
      body:"*"
    };
  }

  rpc SendMessage(stream SendMessageRequest) returns(stream SendMessageResponse){
    option (google.api.http) = {
      post: "/v1/api/gateway/send",
      body:"*"
    };
  }

  rpc PushToAllMessage(stream PushToAllRequest) returns(stream PushToAllResponse){
    option (google.api.http) = {
      post: "/v1/api/gateway/pushToAll",
      body:"*"
    };
  }
}

